{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/call.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CallService","httpClient","data","post","put","get","providedIn","LoginComponent","callservice","formBuilder","v","gurls","regv","st","successmsg","show","errormsg","clicknum","con","lb","lb1","status","connection","dblistv","delete1","logingroup","group","required","registergroup","searchgroup","admingroup","login","value","subscribe","response","loginv","err","setValue","username","password","ConfirmPassword","register","search","keyword","selectedurl","addurl","addkey","dblist","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","\r\n<app-login></app-login>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n@NgModule({\n  exports:[ScrollingModule],\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule ,\n    ReactiveFormsModule,\n    ScrollingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport{HttpClient} from '@angular/common/http'\n@Injectable({\n  providedIn: 'root'\n})\nexport class CallService {\n\n  constructor(private httpClient: HttpClient) { \n    // console.log(httpClient);\n  }\n  login(data){\n    return this.httpClient.post(\"api/login\",data); \n    // return this.httpClient.post(\"http://localhost:3000/api/login\",data); \n\n  }\n  register(data){\n    return this.httpClient.post(\"api/register\",data); \n    // return this.httpClient.post(\"http://localhost:3000/api/register\",data); \n\n  }\n  search(data){\n    return this.httpClient.post(\"api/list\",data); \n    // return this.httpClient.post(\"http://localhost:3000/api/list\",data); \n\n  }\n  addurl(data){\n    return this.httpClient.put(\"api/add\",data); \n    // return this.httpClient.put(\"http://localhost:3000/api/add\",data); \n\n  }\n  addkey(data){\n    return this.httpClient.post(\"api/admin\",data); \n    // return this.httpClient.post(\"http://localhost:3000/api/admin\",data); \n\n  }\n  dblist(){\n    return this.httpClient.get(\"api/dblist\"); \n    // return this.httpClient.get(\"http://localhost:3000/api/dblist\");\n  }\n  delete(id){\n    return this.httpClient.delete(\"api/dblist/\"+id);\n    // return this.httpClient.delete(\"http://localhost:3000/api/dblist/\"+id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport{CallService} from \"../call.service\";\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nloginvalid:any;\nv:any=true;\nusername:any;\npassword:any;\nloginv:number;\nConfirmPassword:any\ngurls:any=null;\nregv:any=1;\nst:any=null;\nsuccessmsg:string=null;\nshow:any=true;\nerrormsg:string=null;\nkeyword:string;\nselectlist:[{}];\nclicknum:number=0;\ncon:number=0;\nadmin:number;\nlb:number=0;\nlb1:number=null;\nstatus:number=null;\nconnection:string=null;\ndblistv:any=null\ndelete1:any=null;\n  constructor(private callservice:CallService ,private formBuilder: FormBuilder) {\n    // console.log(\"in ngoninit\")\n  }\nlogingroup:FormGroup;\nregistergroup:FormGroup;\nsearchgroup:FormGroup;\nadmingroup:FormGroup;\nlistgroup:FormGroup;\n\n  ngOnInit(): void {\n    this.logingroup=this.formBuilder.group({\n      'username': ['', [Validators.required]],//binding mandatory validation for aadharNumber\n      'password': ['', [Validators.required]],//binding mandatory and custom phonenumber validation for phoneNumber\n      \n    });\n    this.registergroup=this.formBuilder.group({\n      'username': ['', [Validators.required]],//binding mandatory validation for aadharNumber\n      'password': ['', [Validators.required]],//binding mandatory and custom phonenumber validation for phoneNumber\n      'ConfirmPassword': ['', [Validators.required]]\n    });\n    this.searchgroup=this.formBuilder.group({\n      'keyword': ['', [Validators.required]]//binding mandatory validation for aadharNumber\n     \n    });\n    this.admingroup=this.formBuilder.group({\n      'keyword': ['', [Validators.required]]//binding mandatory validation for aadharNumber\n     \n    });\n  }\n  login(){\n    this.successmsg=null;\n    this.callservice.login(this.logingroup.value).subscribe((response)=>{\n      // console.log(response);\n      // this.admin=0;\n      // if(response[\"value\"]!=10){\n        this.lb=1;\n        this.loginv=response[\"value\"];\n        // this.logingroup.setValue({keyword:null});\n\n      // }\n      \n    },err=>{\n      // console.log(err);\n      this.status=err.status;\n      \n    })\n    \n  }\n  reset(){\nthis.regv=1;\nthis.successmsg=null;\nthis.errormsg=null;\nthis.show=false;\nthis.dblistv=null;\nthis.registergroup.setValue({username:null,password:null,ConfirmPassword:null});\nthis.logingroup.setValue({username:null,password:null});\n\n  }\n  register1(){\n    this.successmsg=null;\nthis.errormsg=null;\n    this.regv=0;\n    this.show=true;\n  }\n  register()\n{this.loginv=2;\n  this.successmsg=null;\nthis.errormsg=null;\nthis.show=false;\n  this.callservice.register(this.registergroup.value).subscribe(response=>{\n    // console.log(response);\n    this.connection=null;\n    if(response[\"value\"]==1){\n     \nthis.successmsg=response[\"msg\"]\nthis.registergroup.setValue({username:null,password:null,ConfirmPassword:null});\n    }else{\n    \n      this.errormsg=response[\"msg\"];\n      this.registergroup.setValue({username:null,password:null,ConfirmPassword:null});\n    }\n  },err=>{\n    // console.log(err);\n    // this.errormsg=\n    \n    this.status=err.status;\n    \n  })\n  \n}\nsearch(){\n  this.successmsg=null;\nthis.errormsg=null;\nthis.v=true;\n// console.log(this.searchgroup.value);\n// console.log(this.logingroup.value);\nthis.clicknum=1;\n// console.log({\"username\":this.logingroup.value.username,\"password\":this.logingroup.value.password,\"keyword\":this.searchgroup.value.keyword})\nthis.callservice.search({\"username\":this.logingroup.value.username,\"password\":this.logingroup.value.password,\"keyword\":this.searchgroup.value.keyword}).subscribe(response=>{\n\n  this.gurls=response[\"value\"];\n this.errormsg=response[\"error\"];\nthis.st=response[\"st\"];\n//  console.log(this.errormsg)\n})\n  \n}\nlist(){\n  // console.log(this.listgroup.value);\n}\nuadd(selectedurl){\n  // let selectlist:[{}];\n  this.successmsg=null;\nthis.errormsg=null;\n  // console.log(selectedurl)\n//   console.log(selectedurl[\"title\"]+\" \"+selectedurl[\"url\"]+\" \"+selectedurl[\"snippet\"])\n//   let obj={\"title\":selectedurl[\"title\"],url:selectedurl[\"url\"],snippet:selectedurl[\"snippet\"]};\n//   console.log(obj)\n// selectlist.push(obj);\n// console.log(selectlist);\nthis.con=0;\n// console.log(this.logingroup.value);\n// console.log({\"username\":this.logingroup.value.username,\"password\":this.logingroup.value.password,\"keyword\":this.searchgroup.value.keyword,\"datas\":[this.gurls[selectedurl]]})\n// console.log(this.gurls[selectedurl])\nthis.callservice.addurl({\"username\":this.logingroup.value.username,\"password\":this.logingroup.value.password,\"keyword\":this.searchgroup.value.keyword,\"datas\":[this.gurls[selectedurl]]}).subscribe((response)=>{\n  // console.log(response);\n  // if(response[\"msg\"]==\"successfully list is added\"){\n    this.con=1;\n  // }\n  this.successmsg=response[\"msg\"];\n})\n}\ncl(){\n  this.con=0;\n}\nreset1(){\n  this.gurls=null;\n  this.clicknum=0;\n  this.st=null;\n  \n  this.searchgroup.setValue({keyword:null});\n\n}\nlogout(){\n  this.logingroup.setValue({username:null,password:null});\n  this.gurls=null;\n  this.regv=1\n  this.delete1=null;\n  this.loginv=null;\n  this.dblistv=null;\n  this.lb=0;\n}\naddkey(){\n  this.successmsg=null;\nthis.errormsg=null;\n  this.callservice.addkey({\"username\":this.logingroup.value.username,\"password\":this.logingroup.value.password,\"keyword\":this.admingroup.value.keyword}).subscribe(response=>{\n   this.successmsg=response[\"msg\"];\n  //  this.logingroup.setValue({username:null,password:null});\n   this.admingroup.setValue({keyword:null});\n\n  })\n}\ndblist(){\n  this.callservice.dblist().subscribe(response=>{\n    this.dblistv=response;\n  })\n}\ndelete(data){\n  this.callservice.delete(data).subscribe(response=>{\n    this.delete1=response[\"msg\"];\n    this.dblist();\n  })\n}\n}\n","\n<div class=\"container\"  style=\"margin-top:40px; padding:20px; background-color:#eff0f2;border-radius:15px;\n-webkit-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\n-moz-box-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\nbox-shadow: 0px 0px 5px 2px rgba(0,0,0,0.2);\">\n\n<div *ngIf=\"this.status==0\"class=\"toast-header\">\n  <strong class=\"mr-auto\">Error Conneting ! . . . .</strong>\n  <small>Close</small>\n  <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" (click)=\" this.status=null\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n\n<div *ngIf=\"regv && this.loginv!=1&&this.loginv!=10\">\n  <div class=\"col-sm-12 text-info display-1 text-strong\" style=\"text-align:center;\">\n    Login\n  </div>\n\n  <div class=\"col-sm-12\">\n    <form [formGroup]=\"logingroup\" (ngSubmit)=\"login()\">\n        <div class=\"form-group text-info \">\n          <label class=\"display-4\" for=\"username\">Username:</label>\n          <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\" autocomplete=\"off\">\n        </div>\n        <div class=\"form-group text-info\">\n            <label class=\"display-4\" for=\"password\">Password:</label>\n            <input type=\"text\" id=\"password\" class=\"form-control\" formControlName=\"password\" autocomplete=\"off\"> \n          </div>\n       <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=this.logingroup.invalid>Login</button><br>\n      \n       <span *ngIf=\"this.loginv==-1\" class=\"text-danger\">*you are not registered!</span>\n       <span *ngIf=\"this.loginv==0\" class=\"text-danger\">*incorrect password!</span>\n\n      </form>\n      <button type=\"button\" class=\"btn btn-secondary btn-block\" (click)=\"register1()\">Register</button>\n      <button type=\"button\" class=\"btn btn-secondary btn-block\" (click)=\"this.logingroup.setValue({username:null,password:null});\">Reset</button>\n\n        \n\n  </div>\n  </div>\n  <!-- register -->\n  <div *ngIf=\"regv==0\">\n    <button type=\"button\" class=\"btn text-dark btn1 \" (click)=\"this.regv=1\" ><i class=\"fas fa-arrow-left\"></i>Back</button><br>\n    <div class=\"col-sm-12 text-info display-1 text-strong\" style=\"text-align:center;\">\n      Register\n    </div>\n    <div class=\"col-sm-12\" *ngIf=\"this.successmsg==null\">\n      <form [formGroup]=\"registergroup\" (ngSubmit)=\"register()\">\n          <div class=\"form-group text-info \">\n            <label class=\"display-4\" for=\"username\">Username:</label>\n            <input type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\" autocomplete=\"off\">\n          </div>\n          <div class=\"form-group text-info\">\n              <label class=\"form-control-label display-4\" for=\"password\">Password:</label>\n              <input type=\"text\" id=\"password\" class=\"form-control\" formControlName=\"password\" autocomplete=\"off\">\n            </div>\n            <div class=\"form-group text-info\">\n              <div class=\" has-danger\">\n                <label class=\"form-control-label display-4\" for=\"inputDanger1\">ConfirmPassword:</label>\n                <input type=\"text\" value=\"wrong value\" class=\"form-control\" autocomplete=\"off\" [ngClass]=\"{'is-valid': this.registergroup.controls.password.value==this.registergroup.controls.ConfirmPassword.value&&this.registergroup.controls.ConfirmPassword.dirty&&this.registergroup.valid,'is-invalid': this.registergroup.controls.ConfirmPassword.dirty&& this.registergroup.controls.password.value!=this.registergroup.controls.ConfirmPassword.value&&this.registergroup.valid}\" formControlName=\"ConfirmPassword\">\n                <div class=\"valid-feedback\">password matched</div>\n                <div class=\"invalid-feedback\">*password mismatch</div>\n              </div>\n            </div>\n         <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=this.registergroup.invalid>Register</button><br>\n       <span *ngIf=\"this.errormsg\" class=\"text-danger\">*{{this.errormsg}}</span>\n        </form>\n      \n        \n</div>\n<div class=\"alert alert-dismissible alert-success\" *ngIf=\"this.successmsg\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\"(click)=\"reset()\">&times;</button>\n            <h4 class=\"alert-heading\">Message:</h4>\n            <strong>*{{this.successmsg}}</strong> \n          </div>\n    </div>\n\n\n\n  <!-- admin -->\n  <div *ngIf=\"(this.loginv==10&&this.gurls==null)&&(this.clicknum==0)&&(this.lb==1)\">\n    <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"logout()\" >Logout</button><br>\n  <div class=\"text-center text-dark display-4\">\n    <p>Enter Access Key</p>\n  </div>\n  <form [formGroup]=\"admingroup\" (ngSubmit)=\"addkey()\">\n    <input type=\"text\" id=\"keyword\" class=\"form-control\" formControlName=\"keyword\" autocomplete=\"off\">\n<button class=\"btn  btn-block btn-info\" type=\"submit\" [disabled]=this.admingroup.invalid>AddKey</button>\n</form>\n<button class=\"btn  btn-block btn-outline-warning\" type=\"submit\" (click)=\"dblist()\">Registered User</button>\n<a href=\"https://serpstack.com/documentation\" target=\"_blank\">To Get AccessKey</a>\n  </div>\n  <div *ngIf=\"this.dblistv\">\n    <hr style=\"background-color: #292b2c;\">\n    <div class=\"container\" *ngIf=\"this.dblistv\">\n      <div class=\"row\">\n        <div class=\"col-md-4 text-center text-warning text-capitalize\">\n       <h3>UserName</h3> \n        </div>\n        <div class=\"col-md-3 text-center text-warning\">\n       <h3>Password</h3> \n        </div>\n        <div class=\"col-md-3 text-center text-warning\">\n        <h3> Keyword</h3>\n        </div>\n      </div>\n      <hr style=\"background-color: #292b2c;\">\n      <div class=\"alert alert-dismissible alert-success\" *ngIf=\"this.delete1\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" (click)=\"this.delete1=null\">&times;</button>\n    <strong>{{this.delete1}}</strong>\n  </div>\n      <div *ngFor=\"let data of dblistv\">\n          <div class=\"row text-center text-justify \" *ngIf=\"data.username!='iamadmin'\">\n          <div class=\"col-md-4 text-center text-justify text-dark\">\n           {{data.username}}\n          </div>\n          <div class=\"col-md-3 text-center text-justify text-dark\">\n            {{data.password}}\n          </div>\n          <div class=\"col-md-3 text-center text-justify text-dark\">\n            <p *ngIf=\"data.keyword==null\">Not Yet</p>{{data.keyword}}\n          </div>\n          <div class=\"col-md-1 text-center\">\n  <!-- <input type=\"submit\" class=\"btn fa fa-trash-o\" style=\"font-size: 20px;color:red;\" value=\"&#xf014;\" (click)=\"delete(data._id)\"/> -->\n  <button type=\"button\" class=\"btn1 btn text-danger\" (click)=\"delete(data._id)\" ><i class=\"fas fa-trash-alt\"></i></button><br>\n          </div>\n          \n      </div>\n      <hr *ngIf=\"data.username!='iamadmin'\" style=\"background-color: #5bc0de;\"> \n      </div>\n  </div>\n\n  </div>\n  <div class=\"alert alert-dismissible alert-success\" *ngIf=\"this.successmsg&&this.loginv==10\">\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" (click)=\"reset()\">&times;</button>\n    <strong>{{this.successmsg}}</strong>\n  </div>\n\n\n\n\n\n\n    <!-- to enable search bar -->\n<div *ngIf=\"(this.loginv==1&&this.gurls==null)&&(this.clicknum==0)&&(this.lb==1)\">\n \n  <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"logout()\" >Logout</button><br>\n\n  <div class=\"text-center text-dark display-4\">\n    <p>Search with keyword</p>\n  </div>\n\n    <form [formGroup]=\"searchgroup\" (ngSubmit)=\"search()\">\n        <input type=\"text\" id=\"ConfirmPassword\" class=\"form-control\" formControlName=\"keyword\" autocomplete=\"off\">\n    <button class=\"btn  btn-block btn-info\" type=\"submit\" [disabled]=this.searchgroup.invalid>Search</button>\n</form>\n</div>\n<div *ngIf=\"this.errormsg!=null&&this.v&&this.st==-1\"class=\"toast show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n  <div class=\"toast-header\">\n    <strong class=\"mr-auto\">Message</strong>\n    <small>Close</small>\n    <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" (click)=\"this.clicknum=this.v=0\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"toast-body\">\n    {{this.errormsg}}\n  </div>\n</div>\n<div *ngIf=\"(this.loginv==1&&this.gurls==null)&&(this.clicknum==1)&&this.errormsg==null\">\n  <div class=\"loader\"  style=\"\n  \n  position: fixed;\n  top:0;\n  bottom:0;\nleft:0;\nright:0;\n  margin: auto;\n\"></div>\n  <p class=\"text-center text-info display-3\">Fetching result</p>\n  \n</div>\n<div *ngIf=\"this.gurls\">\n  <!-- <input type=\"submit\" value=\"Back\" (click)=\"reset1()\"/> -->\n  <button type=\"button\" class=\"btn text-dark btn1 \" (click)=\"reset1()\" ><i class=\"fas fa-arrow-left\"></i>Back</button><br>\n <!--  -->\n <div *ngIf=\"this.status==0\"class=\"toast-header\">\n  <strong class=\"mr-auto\">Error Conneting ! . . . .</strong>\n  <small>Close</small>\n  <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" (click)=\" this.status=null\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n \n \n  <!--  -->\n  <div class=\"text-center text-dark display-4\"><p>Results - click + icons to save </p></div>\n  <div *ngIf=\"this.st!=1&&this.st!=null&&this.errormsg\"class=\"toast show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    <div class=\"toast-header\">\n      <strong class=\"mr-auto\">Message</strong>\n      <small>Close</small>\n      <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" (click)=\"this.st=null\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"toast-body\">\n      {{this.errormsg}} or accesskey\n    </div>\n  </div>\n  <div *ngIf=\"this.con==1 &&this.successmsg\"class=\"toast show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n    <div class=\"toast-header\">\n      <strong class=\"mr-auto\">Message</strong>\n      <small>Close</small>\n      <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" (click)=\"this.con=0\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"toast-body\">\n      {{ this.successmsg}}\n    </div>\n  </div>\n  <!-- <div *ngFor=\"let url1 of gurls ; let i=index\" >\n      <div class=\"alert alert-dismissible alert-light \">\n        <button type=\"button\" class=\"close glyphicon glyphicon-plus\"  data-dismiss=\"alert\" (click)=\"uadd(i)\">&#x2b;</button>\n        <a  href={{url1.url}} target=\"_blank\">{{url1.title}}</a><br>\n        <p class=\"text-dark\">{{url1.snippet}}</p>\n      </div>\n      </div> -->\n      <cdk-virtual-scroll-viewport itemSize=\"150\" class=\"example-viewport\">\n        <div *cdkVirtualFor=\"let url1 of gurls ; let i=index\" class=\"example-item\">\n          <div class=\"alert alert-dismissible alert-light \">\n          <button type=\"button\" class=\"close glyphicon glyphicon-plus\"  data-dismiss=\"alert\" (click)=\"uadd(i)\">&#x2b;</button>\n          <a  href={{url1.url}} target=\"_blank\">{{url1.title}}</a><br>\n          <p class=\"text-dark\">{{url1.snippet}}</p>\n        </div>\n      </div>\n      </cdk-virtual-scroll-viewport>\n      \n   \n\n</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}